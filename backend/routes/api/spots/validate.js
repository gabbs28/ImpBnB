const { body, param, query } = require('express-validator');
const { handleValidationErrors } = require('../../../utils/validation');

/** Error Response: Body validation error
  * Status Code: 400
  * Headers:
    * Content-Type: application/json
  * Body:

    ```json
    {
      "message": "Bad Request", // (or "Validation error" if generated by Sequelize),
      "errors": {
        "address": "Street address is required",
        "city": "City is required",
        "state": "State is required",
        "country": "Country is required",
        "lat": "Latitude is not valid",
        "lng": "Longitude is not valid",
        "name": "Name must be less than 50 characters",
        "description": "Description is required",
        "price": "Price per day is required"
      }
    }
    ```
*/

const validateSpot = [
    body('address')
      .exists({ checkFalsy: true })
      .notEmpty()
      .withMessage('Street address is required'),
    body('city')
      .exists({ checkFalsy: true })
      .notEmpty()
      .withMessage('City is required'),
    body('state')
      .exists({ checkFalsy: true })
      .notEmpty()
      .withMessage('State is required'),
    body('country')
      .exists({ checkFalsy: true })
      .notEmpty()
      .withMessage('Country is required'),
    body('lat')
      .exists({ checkFalsy: true })
      .notEmpty()
      .isDecimal()
      .withMessage('Latitude is not valid'),
    body('lng')
      .exists({ checkFalsy: true })
      .notEmpty()
      .isDecimal()
      .withMessage('Longitude is not valid'),
    body('name')
      .exists({ checkFalsy: true })
      .notEmpty()
      .isLength({ min: 1, max: 49 })
      .withMessage('Name must be less than 50 characters'),
    body('description')
      .exists({ checkFalsy: true })
      .notEmpty()
      .withMessage('Description is required'),
    body('price')
      .exists({ checkFalsy: true })
      .notEmpty()
      .isInt()
      .withMessage('Price per day is required'),
    handleValidationErrors
];


module.exports = {
    validateSpot
};
